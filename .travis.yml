language: csharp  
sudo: required  
dist: trusty
services:
  - docker
addons:
  apt:
    sources:
    - sourceline: 'deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/dotnet-release/ trusty main'
      key_url: 'https://apt-mo.trafficmanager.net/keys/microsoft.asc'
    - dotnet-dev-1.0.1
os:
  - linux
  #- osx # todo: wait for https://github.com/dotnet/corefx/issues/9394
#osx_image: xcode7.3  
branches:
  only:
    - master
before_install:  
  # - if test "$TRAVIS_OS_NAME" == "osx"; then brew update; brew install openssl; ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/; ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/; fiopenssl; fi
script:
  - chmod +x ./Scripts/Linux/build.sh
  - chmod +x ./Scripts/Linux/runTests.sh
  - ./Scripts/Linux/build.sh
  - ./Scripts/Linux/runTests.sh
  - dotnet publish ./Src/Kronos.Server/ -c Release -o ./Bin -f netcoreapp1.1
  - cp ./Src/Kronos.Server/NLog.config ./Bin/
after_success:
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  - docker build -t lukaszpyrzyk/kronos .
  - 'if [ "$BRANCH" == "master" ]; then
          echo "Pushing to the master!";
          docker push lukaszpyrzyk/kronos;
          echo "Pushing to the master is done";
     else
          echo "Changing branch tag";
          docker tag lukaszpyrzyk/kronos lukaszpyrzyk/kronos:$BRANCH;
          echo "Changing branch tag done";
          docker images --all;
          echo "Publishing" lukaszpyrzyk/kronos:$BRANCH;
          docker push lukaszpyrzyk/kronos:$BRANCH;
          echo "Pushing branch done";
     fi'
